@page "/AddStudent"

@using Client.Services.Abstraction;

@inject IStudentsService studentservice;
@inject Blazored.LocalStorage.ILocalStorageService localStore


@using Dtos;
@using Client.Services;
@using Services.Common;

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>First Name</label>
                <InputText @bind-Value="model.FirstName" class="form-control" />
                <ValidationMessage For="@(() => model.FirstName)" />
            </div>
            <div class="form-group">
                <label>Last Name</label>
                <InputText @bind-Value="model.LastName" class="form-control" />
                <ValidationMessage For="@(() => model.LastName)" />
            </div> <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control" />
                <ValidationMessage For="@(() => model.Email)" />
            </div>

            <div class="form-group">
                <label>Phone</label>
                <InputText @bind-Value="model.Phone" class="form-control" />
                <ValidationMessage For="@(() => model.Phone)" />
            </div>


            <button class="btn btn-primary" @onclick="SendRequest">

                Register
            </button>
            <NavLink href="account/login" class="btn btn-link">Cancel</NavLink>
        </EditForm>
    </div>
</div>


@code {

    private StudentDto model = new StudentDto();

    const string noteKey = "token";

    private async Task SendRequest()
    {
        var Content = await localStore.GetItemAsync<string>(noteKey);

        await studentservice.Addstudent(model, Content);

    }


    private async void OnValidSubmit()
    {


    }



}